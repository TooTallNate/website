/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/personal_computer/personal_computer_blg.glb -t
Author: Juan Foo (https://sketchfab.com/juanotron)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/personal-computer-b943e06de72c4b2b9ac6b9d7ca813f8f
Title: Personal Computer
*/

import type * as THREE from "three";
import { Html, useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";
import CLI from "@components/3d/CLI";
import { loadingAtom } from "src/store/loading";
import { useStore } from "@nanostores/react";

type GLTFResult = GLTF & {
  nodes: {
    monitor_gray_0: THREE.Mesh;
    monitor_vintage_2_0: THREE.Mesh;
    monitor_white001_0: THREE.Mesh;
    monitor_screen_0: THREE.Mesh;
    monitor_black_0: THREE.Mesh;
    cpu_white_0: THREE.Mesh;
    cpu_gray_metallic_0: THREE.Mesh;
    cpu_metallic_0: THREE.Mesh;
    cpu_gray_0: THREE.Mesh;
    cpu_green_0: THREE.Mesh;
    cpu_gray_stiker_0: THREE.Mesh;
    flopy_vintage_1_0: THREE.Mesh;
    Cube_screen_0: THREE.Mesh;
    flopy001_vintage_1_0: THREE.Mesh;
    flopy002_vintage_1_0: THREE.Mesh;
    vent_monitor_gray_0: THREE.Mesh;
    cpu003_green_0: THREE.Mesh;
    cpu003_gray_stiker_0: THREE.Mesh;
    Plane001_vintage_2_0: THREE.Mesh;
    Plane003_vintage_2_0: THREE.Mesh;
    Plane004_white001_0: THREE.Mesh;
    Plane005_white_0: THREE.Mesh;
    Plane006_vintage_2_0: THREE.Mesh;
    Plane007_white_0: THREE.Mesh;
    Plane009_white001_0: THREE.Mesh;
    Plane010_vintage_2_0: THREE.Mesh;
    Plane012_vintage_2_0: THREE.Mesh;
    Plane014_vintage_2_0: THREE.Mesh;
    Plane011_vintage_2_0: THREE.Mesh;
    Plane002_white_0: THREE.Mesh;
    Plane008_white_0: THREE.Mesh;
    Plane013_white_0: THREE.Mesh;
    Plane015_white_0: THREE.Mesh;
    Plane016_vintage_2_0: THREE.Mesh;
    Plane017_white_0: THREE.Mesh;
    Plane018_vintage_2_0: THREE.Mesh;
    Plane019_vintage_2_0: THREE.Mesh;
    Plane020_vintage_2_0: THREE.Mesh;
    Plane021_vintage_2_0: THREE.Mesh;
    Plane022_vintage_2_0: THREE.Mesh;
    kewboard_vintage_2_0: THREE.Mesh;
    kewboard_white_0: THREE.Mesh;
    cpu001_gray_metallic_0: THREE.Mesh;
  };
  materials: {
    gray: THREE.MeshStandardMaterial;
    vintage_2: THREE.MeshStandardMaterial;
    ["white.001"]: THREE.MeshStandardMaterial;
    screen: THREE.MeshStandardMaterial;
    black: THREE.MeshStandardMaterial;
    white: THREE.MeshStandardMaterial;
    gray_metallic: THREE.MeshStandardMaterial;
    metallic: THREE.MeshStandardMaterial;
    green: THREE.MeshStandardMaterial;
    gray_stiker: THREE.MeshStandardMaterial;
    vintage_1: THREE.MeshStandardMaterial;
  };
};

function PC(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/personal_computer/scene.gltf"
  ) as GLTFResult;
  const loading = useStore(loadingAtom);
  return (
    <group {...props} dispose={null}>
      <group
        position={[0, 0, 0]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        scale={0.01}
      >
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[0, 222.2, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <mesh
              geometry={nodes.monitor_gray_0.geometry}
              material={materials.gray}
            />
            <mesh
              geometry={nodes.monitor_vintage_2_0.geometry}
              material={materials.vintage_2}
            />
            <mesh
              geometry={nodes.monitor_white001_0.geometry}
              material={materials["white.001"]}
            />
            {/* <mesh
              geometry={nodes.monitor_screen_0.geometry}
              material={materials.screen}
            /> */}
            <Html
              castShadow
              receiveShadow
              rotation={[0, 1.5, 1.575]}
              position={[0.8, -0.25, 0]}
              transform
            >
              <div
                style={{
                  width: 68,
                  height: 48,
                }}
              >
                {!loading && <CLI />}
              </div>
            </Html>
            <mesh
              geometry={nodes.monitor_black_0.geometry}
              material={materials.black}
            />
          </group>
          <group
            position={[12.12, 26.49, -9.71]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <mesh
              geometry={nodes.cpu_white_0.geometry}
              material={materials.white}
            />
            <mesh
              geometry={nodes.cpu_gray_metallic_0.geometry}
              material={materials.gray_metallic}
            />
            <mesh
              geometry={nodes.cpu_metallic_0.geometry}
              material={materials.metallic}
            />
            <mesh
              geometry={nodes.cpu_gray_0.geometry}
              material={materials.gray}
            />
            <mesh
              geometry={nodes.cpu_green_0.geometry}
              material={materials.green}
            />
            <mesh
              geometry={nodes.cpu_gray_stiker_0.geometry}
              material={materials.gray_stiker}
            />
          </group>
          <group
            position={[314.53, 2.77, 10.71]}
            rotation={[-Math.PI / 2, 0.22, 0]}
            scale={[100, 179.37, 100]}
          >
            <group
              position={[-0.82, 0.94, 0.18]}
              rotation={[0, -1.52, 0]}
              scale={[1, 0.56, 1]}
            >
              <mesh
                geometry={nodes.cpu003_green_0.geometry}
                material={materials.green}
              />
              <mesh
                geometry={nodes.cpu003_gray_stiker_0.geometry}
                material={materials.gray_stiker}
              />
            </group>
            <mesh
              geometry={nodes.kewboard_vintage_2_0.geometry}
              material={materials.vintage_2}
            />
            <mesh
              geometry={nodes.kewboard_white_0.geometry}
              material={materials.white}
            />
            <mesh
              geometry={nodes.Plane001_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, -0.85, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane003_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, -0.76, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane004_white001_0.geometry}
              material={materials["white.001"]}
              position={[-0.47, -0.63, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane005_white_0.geometry}
              material={materials.white}
              position={[-0.31, -0.5, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane006_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.31, -0.61, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane007_white_0.geometry}
              material={materials.white}
              position={[-0.15, -0.47, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane009_white001_0.geometry}
              material={materials["white.001"]}
              position={[0.01, -0.42, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane010_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.15, -0.59, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane012_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[0.01, 0.48, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane014_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.22, 0.49, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane011_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[0.01, -0.57, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane002_white_0.geometry}
              material={materials.white}
              position={[0.17, -0.05, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane008_white_0.geometry}
              material={materials.white}
              position={[-0.47, 0.67, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane013_white_0.geometry}
              material={materials.white}
              position={[-0.47, 0.76, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane015_white_0.geometry}
              material={materials.white}
              position={[-0.47, 0.85, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane016_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, 0.95, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane017_white_0.geometry}
              material={materials.white}
              position={[0.17, 0.71, 0.22]}
              scale={0.1}
            />
            <mesh
              geometry={nodes.Plane018_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[0.09, 0.94, 0.22]}
              rotation={[0, 0, Math.PI / 2]}
              scale={[0.06, 0.18, 0.1]}
            />
            <mesh
              geometry={nodes.Plane019_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, -0.63, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane020_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, 0.85, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane021_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, 0.76, 0.22]}
              scale={0.11}
            />
            <mesh
              geometry={nodes.Plane022_vintage_2_0.geometry}
              material={materials.vintage_2}
              position={[-0.47, 0.67, 0.22]}
              scale={0.11}
            />
          </group>
          <mesh
            geometry={nodes.flopy_vintage_1_0.geometry}
            material={materials.vintage_1}
            position={[82.4, 26.74, -9.74]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          {/* <mesh
            geometry={nodes.Cube_screen_0.geometry}
            material={materials.screen}
            position={[76.32, 223.24, -89.25]}
            rotation={[-Math.PI / 2, -0.08, 0]}
            scale={[67.64, 70.66, 62.74]}
          /> */}
          <mesh
            geometry={nodes.flopy001_vintage_1_0.geometry}
            material={materials.vintage_1}
            position={[82.4, 26.74, -9.74]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.flopy002_vintage_1_0.geometry}
            material={materials.vintage_1}
            position={[82.4, 26.74, -9.74]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.vent_monitor_gray_0.geometry}
            material={materials.gray}
            position={[0, 222.31, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            geometry={nodes.cpu001_gray_metallic_0.geometry}
            material={materials.gray_metallic}
            position={[12.12, 26.49, -9.71]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
      </group>
    </group>
  );
}

export function PrimitivePC(props: { [properties: string]: unknown }) {
  const model = useGLTF("/models/personal_computer/personal_computer.glb");
  return <primitive {...props} object={model.scene} />;
}

useGLTF.preload("/models/personal_computer/scene.gltf");

export default PC;
